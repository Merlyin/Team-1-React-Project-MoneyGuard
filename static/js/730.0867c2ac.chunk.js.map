{"version":3,"file":"static/js/730.0867c2ac.chunk.js","mappings":"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","sources":["components/Statistics/statisticsDataTable.styled.js","components/Statistics/statiscticsColors.js","components/Statistics/StatisticsDataTable.js","components/Statistics/dateSelector/dateSelector.styled.js","components/Statistics/dateSelector/dateSelector.js","components/Statistics/datePicker.js","components/Statistics/statisticsChart.styled.js","components/Statistics/statisticsChart.js","redux/statistics/statisticsSelectors.js","pages/StatisticsPage/Statistics.js","pages/StatisticsPage/Statistics.styled.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    width: 336px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 395px;\r\n  }\r\n`;\r\n\r\nexport const Head = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  border-radius: 8px;\r\n  background: rgba(82, 59, 126, 0.6);\r\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\r\n  backdrop-filter: blur(50px);\r\n\r\n  padding: 16px 16px;\r\n  margin-bottom: 16px;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    margin-bottom: 0;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 16px 28px;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nexport const HeadText = styled.div`\r\n  font-family: Poppins;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: normal;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  margin-bottom: 16px;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\nexport const Footer = styled.div`\r\n  font-weight: bold;\r\n  .income {\r\n    color: var(--yellow);\r\n  }\r\n\r\n  .expenses {\r\n    color: var(--dashboard-text);\r\n  }\r\n`;\r\nexport const Expenses = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  margin-bottom: 16px;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 0px 28px;\r\n  }\r\n`;\r\nexport const Income = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 0px 28px;\r\n  }\r\n`;\r\n\r\nexport const ColorBox = styled.div`\r\n  display: block;\r\n  min-width: 24px;\r\n  min-height: 24px;\r\n  background-color: ${props => props.color};\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const StyledTdCat = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledTdSum = styled.div`\r\n  text-align: end;\r\n`;\r\n\r\nexport const StyledTr = styled.div`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  padding: 16px 16px;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 16px 28px;\r\n  }\r\n`;\r\nexport const StyledThCat = styled.div`\r\n  text-align: start;\r\n`;\r\nexport const RowText = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-left: 16px;\r\n`;\r\nexport const StyledThSum = styled.div`\r\n  text-align: end;\r\n`;\r\n\r\nexport const StyledTdTotal = styled.div`\r\n  text-align: end;\r\n`;\r\n","export const colors = [\r\n  { name: 'Main expenses', color: '#FED057' },\r\n  { name: 'Products', color: '#FFD8D0' },\r\n  { name: 'Car', color: '#FD9498' },\r\n  { name: 'Self care', color: '#C5BAFF' },\r\n  { name: 'Child care', color: '#6E78E8' },\r\n  { name: 'Household products', color: '#4A56E2' },\r\n  { name: 'Education', color: '#81E1FF' },\r\n  { name: 'Leisure', color: '#24CCA7' },\r\n  { name: 'Other expenses', color: '#00AD84' },\r\n  { name: 'Entertainment', color: '#FF69B4' },\r\n  { name: 'Income', color: '#FFB627' },\r\n];\r\n","import {\r\n  Body,\r\n  ColorBox,\r\n  Container,\r\n  Expenses,\r\n  Footer,\r\n  Head,\r\n  HeadText,\r\n  Income,\r\n  RowText,\r\n  StyledTdCat,\r\n  StyledTdSum,\r\n  StyledTdTotal,\r\n  StyledTr,\r\n} from './statisticsDataTable.styled';\r\nimport { colors } from './statiscticsColors';\r\n\r\nexport const DataTable = ({ reduxData }) => {\r\n  return (\r\n    <Container>\r\n      <Head>\r\n        <HeadText>\r\n          <span>Category</span>\r\n        </HeadText>\r\n        <HeadText>\r\n          <span>Sum</span>\r\n        </HeadText>\r\n      </Head>\r\n      <Body>\r\n        {reduxData.categoryExpenses\r\n          .filter(category => category.total !== '0.00')\r\n          .map(category => {\r\n            const boxColor = colors.find(color => color.name === category.name);\r\n            return (\r\n              <StyledTr key={category.name}>\r\n                <StyledTdCat>\r\n                  <ColorBox color={boxColor.color} />\r\n                  <RowText>\r\n                    <span>{category.name}</span>\r\n                    <StyledTdSum>{category.total}</StyledTdSum>\r\n                  </RowText>\r\n                </StyledTdCat>\r\n              </StyledTr>\r\n            );\r\n          })}\r\n      </Body>\r\n      <Footer>\r\n        <Expenses>\r\n          <span>Expenses:</span>\r\n          <StyledTdTotal className=\"expenses\">\r\n            {reduxData.totalExpenses.toFixed(2)}\r\n          </StyledTdTotal>\r\n        </Expenses>\r\n        <Income>\r\n          <span>Income:</span>\r\n          <StyledTdTotal className=\"income\">\r\n            {reduxData.totalIncome.toFixed(2)}\r\n          </StyledTdTotal>\r\n        </Income>\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport Select from 'react-select';\r\n\r\nexport const StyledDateSelector = styled(Select)`\r\n  font-size: 18px;\r\n  width: 280px;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    width: 158px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 181px;\r\n  }\r\n\r\n  .Select__control {\r\n    background-color: transparent;\r\n    height: 50px;\r\n    width: 100%;\r\n    border: 0;\r\n    box-shadow: none;\r\n    cursor: pointer;\r\n    color: rgba(251, 251, 251, 1);\r\n    border-radius: 8px;\r\n    border: 1px solid rgba(255, 255, 255, 0.6);\r\n    background: rgba(74, 86, 226, 0.1);\r\n\r\n    :hover {\r\n      border: 1px solid rgba(255, 255, 255, 0.6);\r\n    }\r\n  }\r\n\r\n  .Select__placeholder {\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  .Select__single-value {\r\n    color: rgba(251, 251, 251, 1);\r\n  }\r\n\r\n  .Select__control--is-focused {\r\n    border: 0;\r\n    outline: none;\r\n    box-shadow: 5px 0px 50px 10px rgba(0, 0, 0, 0.15);\r\n    border: 1px solid rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  .Select__indicator-separator {\r\n    display: none;\r\n  }\r\n\r\n  .Select__indicator {\r\n    color: rgba(255, 255, 255, 0.1);\r\n    width: auto;\r\n  }\r\n\r\n  .Select__menu {\r\n    background: linear-gradient(\r\n      210deg,\r\n      rgba(83, 61, 186, 1) 0%,\r\n      rgba(80, 48, 154, 1) 43.14%,\r\n      rgba(106, 70, 165, 1) 73.27%,\r\n      rgba(133, 93, 175, 0.9) 120.03%\r\n    );\r\n    box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\r\n    color: rgba(251, 251, 251, 1);\r\n    font-size: 16px;\r\n    border-radius: 8px;\r\n    max-height: 352px;\r\n  }\r\n\r\n  .Select__menu-list {\r\n    height: 100%;\r\n  }\r\n\r\n  .css-t3ipsp-control {\r\n    border: 1px solid rgba(255, 255, 255, 0.6);\r\n  }\r\n  .Select__option--is-focused {\r\n    color: rgba(255, 134, 141, 1);\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    cursor: pointer;\r\n  }\r\n  .Select__option--is-selected {\r\n    color: rgba(255, 134, 141, 1);\r\n    background-color: rgba(255, 255, 255, 0);\r\n    cursor: pointer;\r\n  }\r\n\r\n  .Select__dropdown-indicator {\r\n    color: rgba(251, 251, 251, 1);\r\n\r\n    &:hover {\r\n      color: rgba(251, 251, 251, 1);\r\n    }\r\n  }\r\n`;\r\n","import { components } from 'react-select';\r\nimport { VscChevronDown, VscChevronUp } from 'react-icons/vsc';\r\nimport { StyledDateSelector } from './dateSelector.styled';\r\n\r\nconst DropdownIndicator = props => {\r\n  if (props.isF) {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <VscChevronUp />\r\n      </components.DropdownIndicator>\r\n    );\r\n  }\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <VscChevronDown />\r\n    </components.DropdownIndicator>\r\n  );\r\n};\r\n\r\nconst customScrollbarStyles = {\r\n  menuList: provided => ({\r\n    ...provided,\r\n    '&::-webkit-scrollbar': {\r\n      width: '6px',\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#BFB4DD',\r\n      borderRadius: '12px',\r\n    },\r\n  }),\r\n};\r\n\r\nexport const DateSelector = ({ onChange, options, value, className }) => {\r\n  const defaultValue = (options, value) => {\r\n    return options ? options.find(option => option.value === value) : '';\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyledDateSelector\r\n        value={defaultValue(options, value)}\r\n        placeholder=\"Select a category\"\r\n        components={{ DropdownIndicator }}\r\n        onChange={value => onChange(value)}\r\n        options={options}\r\n        classNamePrefix=\"Select\"\r\n        styles={customScrollbarStyles}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport 'url-search-params-polyfill';\r\nimport { DateSelector } from './dateSelector/dateSelector';\r\n\r\nfunction DatePicker({ getYear, getMonth, selectedMonth, selectedYear }) {\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const customScrollbarStyles = {\r\n    menuList: provided => ({\r\n      ...provided,\r\n      '&::-webkit-scrollbar': {\r\n        width: '6px',\r\n      },\r\n      '&::-webkit-scrollbar-thumb': {\r\n        backgroundColor: '#BFB4DD',\r\n        borderRadius: '12px',\r\n      },\r\n    }),\r\n  };\r\n\r\n  const monthOptions = monthNames.map((month, index) => ({\r\n    value: index + 1,\r\n    label: month,\r\n  }));\r\n  const currentYear = new Date().getFullYear();\r\n  const yearOptions = Array.from({ length: 10 }, (_, index) => ({\r\n    value: currentYear - index,\r\n    label: String(currentYear - index),\r\n  }));\r\n  return (\r\n    <Fragment>\r\n      <DateSelector\r\n        options={monthOptions}\r\n        value={selectedMonth}\r\n        onChange={getMonth}\r\n        className=\"selectMonth\"\r\n        name=\"selectMonth\"\r\n      />\r\n      <DateSelector\r\n        options={yearOptions}\r\n        value={selectedYear}\r\n        onChange={getYear}\r\n        className=\"selectYear\"\r\n        name=\"selectYear\"\r\n        styles={customScrollbarStyles}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default DatePicker;\r\n","import styled from 'styled-components';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nexport const Balance = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: var(--dashboard-text);\r\n\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const DonutContainer = styled.div`\r\n  max-width: 100%;\r\n  /* width: auto; */\r\n  /* height: auto; */\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n  @media screen and (min-width: 768px) and (max-width: 1267px) {\r\n    margin-top: 20px;\r\n    //max-width: 100%;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 288px;\r\n    height: 288px;\r\n  }\r\n`;\r\n\r\nexport const DoughnutSt = styled(Doughnut)``;\r\n","import { ArcElement, Tooltip, Legend, Chart } from 'chart.js';\r\nimport { colors } from './statiscticsColors';\r\nimport { Balance, DonutContainer, DoughnutSt } from './statisticsChart.styled';\r\n\r\nChart.register(ArcElement, Tooltip, Legend);\r\n\r\nconst StatiscticsChart = ({ reduxData, categories }) => {\r\n  const chartData = {\r\n    labels: categories,\r\n    datasets: [\r\n      {\r\n        data: reduxData.categoryExpenses.map(category => category.total),\r\n        backgroundColor: categories.map(item => {\r\n          const colorInfo = colors.find(colorItem => colorItem.name === item);\r\n          return colorInfo ? colorInfo.color : '#ffff';\r\n        }),\r\n        borderWidth: 0.5,\r\n        cutout: '60%',\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    borderRadius: 2,\r\n    hoverBorderWidth: 1,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <DonutContainer>\r\n      <Balance\r\n        style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n        }}\r\n      >\r\n        Lei {reduxData.totalExpenses.toFixed(2)}\r\n      </Balance>\r\n      <DoughnutSt data={chartData} options={options} />\r\n    </DonutContainer>\r\n  );\r\n};\r\n\r\nexport default StatiscticsChart;\r\n","export const selectStatisticsData = state => state.statistics.statisticsData;\r\nexport const selectCategories = state => state.statistics.categories;\r\n","import { SpinnerLoader } from 'components/Spinner/Spinner';\r\nimport { DataTable } from 'components/Statistics/StatisticsDataTable';\r\nimport DatePicker from 'components/Statistics/datePicker';\r\nimport StatiscticsChart from 'components/Statistics/statisticsChart';\r\nimport { useEffect, useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getCategories,\r\n  getStatistics,\r\n} from 'redux/statistics/statisticsOperations';\r\nimport {\r\n  selectCategories,\r\n  selectStatisticsData,\r\n} from 'redux/statistics/statisticsSelectors';\r\n\r\nconst {\r\n  StatSection,\r\n  RightSideStatWrapper,\r\n  DatePickerWrapper,\r\n  DataWrapper,\r\n  TitleStyled,\r\n  LeftSideWrapper,\r\n} = require('./Statistics.styled');\r\nconst StatiscticsPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [query, setQuery] = useState(\r\n    generateParams(selectedYear, selectedMonth)\r\n  );\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n  function generateParams(year, month) {\r\n    const params = new URLSearchParams();\r\n    params.append('year', year);\r\n    params.append('month', month);\r\n    return params.toString();\r\n  }\r\n  useEffect(() => {\r\n    const newQuery = generateParams(selectedYear, selectedMonth);\r\n    setQuery(newQuery);\r\n  }, [selectedYear, selectedMonth, query]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStatistics(query));\r\n  }, [query, dispatch]);\r\n  const reduxData = useSelector(selectStatisticsData);\r\n  const categories = useSelector(selectCategories);\r\n\r\n  const handleYearChange = event => {\r\n    setSelectedYear(event.value);\r\n  };\r\n\r\n  const handleMonthChange = event => {\r\n    setSelectedMonth(event.value);\r\n  };\r\n\r\n  return (\r\n    <StatSection>\r\n      <Helmet>\r\n        <title>Statisctics</title>\r\n      </Helmet>\r\n      <RightSideStatWrapper>\r\n        <LeftSideWrapper>\r\n          <TitleStyled>Statistics</TitleStyled>\r\n\r\n          {categories && reduxData ? (\r\n            <StatiscticsChart\r\n              reduxData={reduxData}\r\n              categories={categories}\r\n              style={{\r\n                boxSizing: 'border-box',\r\n                display: 'block',\r\n                height: '100%',\r\n                width: '100%',\r\n              }}\r\n            />\r\n          ) : (\r\n            <SpinnerLoader />\r\n          )}\r\n        </LeftSideWrapper>\r\n        <DataWrapper>\r\n          <DatePickerWrapper>\r\n            <DatePicker\r\n              getYear={handleYearChange}\r\n              getMonth={handleMonthChange}\r\n              selectedMonth={selectedMonth}\r\n              selectedYear={selectedYear}\r\n            />\r\n          </DatePickerWrapper>\r\n          {categories && reduxData ? (\r\n            <DataTable reduxData={reduxData} />\r\n          ) : (\r\n            <SpinnerLoader />\r\n          )}\r\n        </DataWrapper>\r\n      </RightSideStatWrapper>\r\n    </StatSection>\r\n  );\r\n};\r\nexport default StatiscticsPage;\r\n","import styled from 'styled-components';\r\nexport const StatSection = styled.div`\r\n  color: var(--white);\r\n  margin-top: 40px;\r\n  width: 320px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  justify-content: center;\r\n  max-width: 100%;\r\n  padding: 0px 20px;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    margin: 0 0 0 -444px;\r\n    padding: 0 32px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin: 40px 0 0 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const RightSideStatWrapper = styled.div`\r\n  @media screen and (max-width: 767px) {\r\n  }\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: flex;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n  }\r\n`;\r\nexport const LeftSideWrapper = styled.div`\r\n  @media screen and (max-width: 767px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    margin-right: 68px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 32px;\r\n    margin-left: 69px;\r\n  }\r\n`;\r\n\r\nexport const DatePickerWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 32px;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    margin-top: 10px;\r\n    flex-direction: row;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    flex-direction: row;\r\n    gap: 32px;\r\n  }\r\n`;\r\nexport const DataWrapper = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 45px;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    width: 336px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n  }\r\n`;\r\nexport const TitleStyled = styled.h1`\r\n  color: var(--white, #fbfbfb);\r\n  text-align: start;\r\n  font-family: Poppins;\r\n  font-size: 30px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  margin: 0;\r\n`;\r\n"],"names":["Container","styled","Head","HeadText","Body","Footer","Expenses","Income","ColorBox","props","color","StyledTdCat","StyledTdSum","StyledTr","RowText","StyledTdTotal","colors","name","DataTable","reduxData","categoryExpenses","filter","category","total","map","boxColor","find","className","totalExpenses","toFixed","totalIncome","StyledDateSelector","Select","DropdownIndicator","isF","c","customScrollbarStyles","menuList","provided","width","backgroundColor","borderRadius","DateSelector","onChange","options","value","option","defaultValue","placeholder","components","classNamePrefix","styles","getYear","getMonth","selectedMonth","selectedYear","monthOptions","month","index","label","currentYear","Date","getFullYear","yearOptions","Array","from","length","_","String","Fragment","Balance","DonutContainer","DoughnutSt","Doughnut","Chart","ArcElement","Tooltip","Legend","categories","chartData","labels","datasets","data","item","colorInfo","colorItem","borderWidth","cutout","style","position","top","left","transform","hoverBorderWidth","plugins","legend","display","tooltip","enabled","selectStatisticsData","state","statistics","statisticsData","selectCategories","require","StatSection","RightSideStatWrapper","DatePickerWrapper","DataWrapper","TitleStyled","LeftSideWrapper","dispatch","useDispatch","useState","setSelectedYear","setSelectedMonth","generateParams","query","setQuery","year","params","URLSearchParams","append","toString","useEffect","getCategories","newQuery","getStatistics","useSelector","boxSizing","height","Spinner","event"],"sourceRoot":""}