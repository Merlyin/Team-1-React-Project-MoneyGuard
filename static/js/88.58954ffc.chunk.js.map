{"version":3,"file":"static/js/88.58954ffc.chunk.js","mappings":"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","sources":["images/logo.svg","components/CustomElements/CustomButton.js","components/LoginForm/LoginForm.styled.js","styles/breakpoints.js","components/RegisterForm/RegisterForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage/Login.js"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 36,\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_15_231)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M24.6828 4.94514C22.1371 4.30829 19.5913 3.03458 17.682 1.12402C15.7727 3.03458 13.2269 4.30829 10.6812 4.94514C11.3176 10.6768 13.2269 14.4979 17.682 17.6822C22.1371 14.4979 24.6828 10.6768 24.6828 4.94514Z\",\n    fill: \"#FFC727\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M22.1365 28.6578L4.31616 7.6416V17.8313L18.3179 33.7526L22.1365 28.6578Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M24.0461 26.7476L31.6834 17.8316V8.27881L19.5911 22.2896L24.0461 26.7476Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M24.6826 29.9319V35.6636L31.6835 27.3845V21.6528L24.6826 29.9319Z\",\n    fill: \"#FBFBFB\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M11.317 29.9319L4.31616 21.6528V27.3845L11.317 35.6636V29.9319Z\",\n    fill: \"#FBFBFB\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_15_231\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 35.9506,\n    height: 35.9739,\n    fill: \"white\",\n    transform: \"translate(0.0249023)\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.2227d48bdeb102c2bf2fa80058db1f9b.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport { Button } from '@mui/material';\r\n\r\nconst buttonStyles = css`\r\n  width: 300px;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 1.5;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CustomButtonBase = styled(Button)`\r\n  && {\r\n    ${buttonStyles}\r\n    color: white;\r\n    background: var(\r\n      --button-gradient,\r\n      linear-gradient(97deg, #ffc727 -16.42%, #9e40ba 97.04%, #7000ff 150.71%)\r\n    );\r\n    box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\r\n\r\n    &:hover {\r\n      color: #3a2f43;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CustomNavLinkBtnBase = styled(NavLink)`\r\n  && {\r\n    ${buttonStyles}\r\n    background-color: #ffffff;\r\n    color: #623f8b;\r\n  }\r\n`;\r\n\r\nexport const CustomButton = ({ isNavLink, customStyles, ...props }) => {\r\n  const StyledComponent = isNavLink ? CustomNavLinkBtnBase : CustomButtonBase;\r\n  return <StyledComponent {...props} />;\r\n};\r\n","import { Field, Form } from 'formik';\r\nimport styled from 'styled-components';\r\nimport { MdEmail, MdHttps } from 'react-icons/md';\r\nimport { FaUser } from 'react-icons/fa';\r\n\r\nexport const FormStyled = styled(Form)`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 60px;\r\n`;\r\n\r\nexport const LabelStyled = styled(`label`)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const EmailIcon = styled(MdEmail)`\r\n  color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nexport const PasswordIcon = styled(MdHttps)`\r\n  color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nexport const UserIcon = styled(FaUser)`\r\n  color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nexport const IconInInput = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nexport const IconStyled = styled.div`\r\n  position: absolute;\r\n  left: 5px;\r\n  fill: rgba(255, 255, 255, 0.9);\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled.span`\r\n  color: #ff868d;\r\n  font-size: 14px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nexport const InputStyled = styled(Field)`\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\r\n  line-height: 1.5;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: rgba(255, 255, 255, 1);\r\n  padding: 0 35px;\r\n  margin: 0;\r\n  position: relative;\r\n\r\n  &::placeholder {\r\n    font-size: 18px;\r\n    line-height: 1.5;\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:active,\r\n  &:visited {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus::placeholder,\r\n  &:active::placeholder {\r\n    transform: translateY(-100%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ErrorContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 8px;\r\n`;\r\n","import { css } from 'styled-components';\r\nimport bgLoginDesktop from '../images/login-bg/bg-login-web.jpg';\r\nimport bgLoginDesktop2x from '../images/login-bg/bg-login-web@2x.jpg';\r\nimport bgRegisterDesktop from '../images/register-bg/bg-register-desktop.jpg';\r\nimport bgRegisterDesktop2x from '../images/register-bg/bg-register-desktop@2x.jpg';\r\n\r\nconst bgDesktop = props =>\r\n  props.isRegister ? bgRegisterDesktop : bgLoginDesktop;\r\nconst bgDesktop2x = props =>\r\n  props.isRegister ? bgRegisterDesktop2x : bgLoginDesktop2x;\r\n\r\nexport const mobileStyles = css`\r\n  @media screen and (max-width: 767px) {\r\n  }\r\n`;\r\n\r\nexport const tabletStyles = css`\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n  }\r\n`;\r\n\r\nexport const desktopStyles = css`\r\n  @media screen and (min-width: 1280px) {\r\n    background-image: url(${bgDesktop});\r\n    @media screen and (min-device-pixel-ratio: 2),\r\n      screen and (-webkit-min-device-pixel-ratio: 2),\r\n      screen and (-o-min-device-pixel-ratio: 1/2),\r\n      screen and (min-resolution: 192dpi),\r\n      screen and (min-resolution: 2dppx) {\r\n      background-image: url(${bgDesktop2x});\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport backLogIn from '../../images/login-bg/bg-login-web.jpg';\r\nimport backRegister from '../../images/register-bg/bg-register-desktop.jpg';\r\n\r\nimport { desktopStyles } from 'styles/breakpoints';\r\n\r\nexport const MainContainer = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background: url(${props => (props.isRegister ? backRegister : backLogIn)});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1200;\r\n\r\n  ${desktopStyles}\r\n\r\n  @media screen and (min-width: 768px) {\r\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 60px 0px;\r\n  }\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 400px;\r\n  flex-shrink: 0;\r\n  border-radius: 8px;\r\n  background: var(--Form-color, rgba(255, 255, 255, 0.1));\r\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\r\n  backdrop-filter: blur(50px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0px;\r\n    padding: calc(20 * (100vw / 480));\r\n    min-width: 300px;\r\n  }\r\n`;\r\n\r\nexport const LogotipStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h3 {\r\n    margin: 0 auto 52px;\r\n    color: var(--white);\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    h3 {\r\n      font-size: 26px;\r\n    }\r\n  }\r\n`;\r\n","import { CustomButton } from 'components/CustomElements/CustomButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { logIn } from 'redux/authReducer/operations';\r\nimport { Formik } from 'formik';\r\nimport Logotip from '../../images/logo.svg';\r\nimport {\r\n  EmailIcon,\r\n  FormStyled,\r\n  IconContainer,\r\n  IconInInput,\r\n  InputStyled,\r\n  LabelStyled,\r\n  PasswordIcon,\r\n} from './LoginForm.styled';\r\nimport { toast } from 'react-toastify';\r\nimport { LogotipStyled } from 'components/RegisterForm/RegisterForm.styled';\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email address').required('Required'),\r\n  password: Yup.string().required('Required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    const formData = {\r\n      email: values.email.trim(),\r\n      password: values.password.trim(),\r\n    };\r\n\r\n    const result = await dispatch(logIn(formData));\r\n    if (result.error) {\r\n      toast.error('Login failed. Please check your credentials.', {\r\n        autoClose: 1200,\r\n      });\r\n    } else {\r\n      const name = result.payload?.user?.name || 'User'; \r\n      toast.success(`You have successfully logged in as ${name}.`, {\r\n        autoClose: 1200,\r\n      });\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormStyled>\r\n        <LogotipStyled>\r\n          <img\r\n            src={Logotip}\r\n            alt=\"Logo MoneyGuard\"\r\n            width=\"36px\"\r\n            height=\"36px\"\r\n            draggable=\"false\"\r\n          />\r\n          <h3>MoneyGuard</h3>\r\n        </LogotipStyled>\r\n\r\n        <LabelStyled>\r\n          <IconInInput>\r\n            <IconContainer>\r\n              <EmailIcon />\r\n            </IconContainer>\r\n            <InputStyled name=\"email\" type=\"email\" placeholder=\"E-mail\" />\r\n          </IconInInput>\r\n        </LabelStyled>\r\n\r\n        <LabelStyled>\r\n          <IconInInput>\r\n            <IconContainer>\r\n              <PasswordIcon />\r\n            </IconContainer>\r\n            <InputStyled\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </IconInInput>\r\n        </LabelStyled>\r\n\r\n        <CustomButton type=\"submit\">Log In</CustomButton>\r\n        <CustomButton isNavLink to=\"/register\">\r\n          Register\r\n        </CustomButton>\r\n      </FormStyled>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from 'components/LoginForm/LoginForm';\r\nimport { ContentContainer, MainContainer } from 'components/RegisterForm/RegisterForm.styled';\r\n\r\n\r\nconst Login = () => {\r\n  return (\r\n    <MainContainer>\r\n      <ContentContainer>\r\n        <LoginForm />\r\n      </ContentContainer>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["buttonStyles","css","CustomButtonBase","styled","Button","CustomNavLinkBtnBase","NavLink","CustomButton","isNavLink","props","customStyles","StyledComponent","FormStyled","Form","LabelStyled","EmailIcon","MdEmail","PasswordIcon","MdHttps","UserIcon","FaUser","IconInInput","IconContainer","ErrorMessageStyled","InputStyled","Field","ErrorContainer","desktopStyles","isRegister","bgRegisterDesktop","bgLoginDesktop","bgRegisterDesktop2x","bgLoginDesktop2x","MainContainer","backRegister","backLogIn","ContentContainer","LogotipStyled","ValidationSchema","Yup","shape","email","required","password","dispatch","useDispatch","handleSubmit","values","resetForm","formData","trim","logIn","result","error","toast","autoClose","name","payload","user","initialValues","validationSchema","onSubmit","src","Logotip","alt","width","height","draggable","type","placeholder","to"],"sourceRoot":""}